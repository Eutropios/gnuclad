Copyright (C) 2010 Donjan Rodic <donjan@dyx.ch>

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.  This file is offered as-is,
without any warranty.

________________________________________________________________________


FIX: renames show after endOfTime if node starts before
FIX: bigParent name alignment

write manual on optimisation



gnuclad-cladogram: grouping by connectors ("real parenting")
gnuclad-cladogram: optimise both-subtree at creation time ?? (no)

generator/svg: curved connectors  ??

parser/dir: time based version (stat)
    (created = deriv, last modified = nameChange)

parser/dir: symlink connectors
                                                                    v0.2
________________________________________________________________________

parser/html
generator/html

translate manual
translatable strings (gettext)

parser/gramps
parser/gedcom

parser/sqlite
parser/gv (graphviz)
                                                                    v0.3
________________________________________________________________________


take a look at libpng, then maybe implement colormap
signature generator: 500x500 SVG (PNG if possible),
                     average distribution, grayscale
                                                                    v0.4
________________________________________________________________________


extensive testing, auditing and code cleanup
                                                                    v0.5
________________________________________________________________________

                                                                    vXXX
________________________________________________________________________

REIMPLEMENT CONFIG OPTIONS
  as done by Volker H. Simonis
  as soon as the new standard ships (C++0x)
  as generic Overload By Return Value chameleons
  store in: vector<Option *> options
  declare by subscript: options["width"] = int(4);
                        options["start"] = Date(2002);
  access by subscript:  cout << options["width"] << " "
                             << Date2str(options["start"]);
  enumeration shortcut: enum opts { width, start };
                        options[width] = int(5);



add ability to override options in CSV? (with X flag)
  -> easy to implement, but painful to maintain

label backgrounds... maybe use font renderer? (freetype)

change command line interface? (getopts)

base GUI on csveditor (java)?
                                                                    vYYY
________________________________________________________________________